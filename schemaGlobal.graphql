# THIS IS A GENERATED FILE
# `npm run generate` to refresh it



type Contact {
  id: ID!
  name: String!
  street: String!
  postcode: String!
  county: String!
  country: String!
  email: String!
  phone: String!
}

input ContactInput {
  name: String!
  street: String!
  postcode: String!
  county: String!
  country: String!
  email: String!
  phone: String!
}

type ContactsPaginated {
  total: Int!
  items: [Contact]!
}

type CustomerMin {
  name: String!
}

type Invoice {
  id: ID!
  customer: CustomerMin!
  items: [Item]!
  labels: [LabelMin]
  total: Int!
  createdAt: String!
  status: InvoiceStatus!
}

input InvoiceCustomerInput {
  name: String!
}

enum InvoiceDBKey {
  id
  customer
  total
  createdAt
  status
}

input InvoiceInput {
  customer: InvoiceCustomerInput!
  items: [InvoiceItemInput]!
  total: Int!
  status: InvoiceStatus = DRAFT
}

input InvoiceItemInput {
  name: String!
  description: String!
  price: Int!
  quantity: Int!
}

type InvoicesPaginated {
  total: Int!
  items: [Invoice]!
}

enum InvoiceStatus {
  DRAFT
  DUE
  PAST_DUE
  PAID
  UNPAID
}

type Item {
  name: String!
  description: String!
  price: Int!
  quantity: Int!
}

type LabelMin {
  name: String!
  color: String
}

type Mutation {
  createContact(input: ContactInput!): Contact!
  createInvoice(input: InvoiceInput!): Invoice!
  _: Boolean
}

type Query {
  getContacts: ContactsPaginated!
  getInvoices(limit: Int, offset: Int, search: String, searchKey: InvoiceDBKey, sortKey: InvoiceDBKey, isDesc: Boolean): InvoicesPaginated!
  getInvoice(id: ID!): Invoice!
  _: Boolean
}
